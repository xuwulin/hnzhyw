<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

    <description>数据源、事务配置</description>

    <!--数据库连接-->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties"/>
        <property name="fileEncoding" value="UTF-8"/>
    </bean>


    <!--数据源-->
    <bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
        <property name="driver" value="${jdbc.oracle.driverClassName}"/>
        <property name="driverUrl" value="${jdbc.oracle.driverUrl}"/>
        <property name="user" value="${jdbc.oracle.username}" />
        <property name="password" value="${jdbc.oracle.password}" />
        <property name="alias" value="${jdbc.alias}" />
        <property name="houseKeepingSleepTime" value="${jdbc.houseKeepingSleepTime}" />
        <property name="prototypeCount" value="${jdbc.prototypeCount}" />
        <property name="minimumConnectionCount" value="${jdbc.minimumConnectionCount}" />
        <property name="maximumConnectionCount" value="${jdbc.maximumConnectionCount}" />
        <property name="simultaneousBuildThrottle" value="${jdbc.simultaneousBuildThrottle}" />
        <property name="maximumConnectionLifetime" value="${jdbc.maximumConnectionLifetime}" />
        <property name="houseKeepingTestSql" value="${jdbc.houseKeepingTestSql}" />
    </bean>

    <!-- 配置Session工厂 -->
    <bean id="sqlSessionFactory" class="com.swx.common.ext.mybatis.PackagesSqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!-- 加载mybatis.xml文件 -->
        <property name="configLocation" value="classpath:resource/baseConfig/spring-mybatis.xml"></property>
        <!-- 自动扫描需要定义类别名的包，将包内的JAVA类的类名作为类别名 -->
        <property name="typeAliasesPackage" value="com.swx.ibms.*.*.bean"></property>

        <!-- 配置MyBatis分页插件pageHelper -->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            helperDialect=oracle
                            reasonable=true
                            supportMethodsArguments=true
                            params=count=countSql
                            autoRuntimeDialect=false
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!-- 自动扫描所有的Mapper接口与文件 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.swx.ibms.business.*.mapper"></property>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 定义个通知，指定事务管理器 -->
    <!--<tx:advice id="txAdvice" transaction-manager="txManager">-->
    <!--<tx:attributes>-->
    <!--<tx:method name="delete*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />-->
    <!--<tx:method name="save*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />-->
    <!--<tx:method name="insert*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />-->
    <!--<tx:method name="update*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" />-->
    <!--<tx:method name="load*" propagation="SUPPORTS" read-only="true" />-->
    <!--<tx:method name="find*" propagation="SUPPORTS" read-only="true" />-->
    <!--<tx:method name="search*" propagation="SUPPORTS" read-only="true" />-->
    <!--<tx:method name="select*" propagation="SUPPORTS" read-only="true" />-->
    <!--<tx:method name="get*" propagation="SUPPORTS" read-only="true" />-->
    <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!--<aop:config>-->
    <!--<aop:pointcut id="serviceOperation" expression="execution(* *.service.impl.*(..))" />-->
    <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />-->
    <!--</aop:config>-->

    <tx:annotation-driven transaction-manager="txManager" />

</beans>